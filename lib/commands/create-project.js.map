{"version":3,"sources":["../../src/commands/create-project.js"],"names":["templates","babel","system","program","version","option","parse","process","argv","args","projectName","type","templateName","templateDirectory","path","join","__dirname","projectDirectory","cwd","packageJsonFile","Error","console","log","fs","copy","then","readJson","packageJson","name","writeJson","childProcess","exec"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,kBADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAhB;;eAKgBC,OAAD,IAAa;AAExBA,EAAAA,OAAO,CAACC,OAAR,CAAgB,OAAhB,EACKC,MADL,CACY,mBADZ,EACiC,gFADjC,EAEKC,KAFL,CAEWC,OAAO,CAACC,IAFnB;AAIA,MAAIC,IAAI,GAAGN,OAAO,CAACM,IAAnB;AACA,MAAIC,WAAW,GAAGD,IAAI,CAAC,CAAD,CAAtB;AACA,MAAIE,IAAI,GAAGR,OAAO,CAACQ,IAAR,IAAgB,OAA3B;AACA,MAAIC,YAAY,GAAGZ,SAAS,CAACW,IAAD,CAAT,IAAmBX,SAAS,CAACC,KAAhD;AAEA,MAAIY,iBAAiB,GAAGC,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,kBAArB,EAAyCJ,YAAzC,CAAxB;AACA,MAAIK,gBAAgB,GAAGH,IAAI,CAACC,IAAL,CAAUR,OAAO,CAACW,GAAR,EAAV,EAAyBR,WAAzB,CAAvB;AACA,MAAIS,eAAe,GAAGL,IAAI,CAACC,IAAL,CAAUE,gBAAV,EAA4B,cAA5B,CAAtB;;AAEA,MAAIP,WAAW,IAAI,IAAnB,EAAyB;AACrB,UAAM,IAAIU,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEAC,EAAAA,EAAE,CAACC,IAAH,CAAQX,iBAAR,EAA2BI,gBAA3B,EAA6CQ,IAA7C,CAAkD,MAAM;AACpDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAOC,EAAE,CAACG,QAAH,CAAYP,eAAZ,CAAP;AACH,GAHD,EAGGM,IAHH,CAGSE,WAAD,IAAiB;AACrBA,IAAAA,WAAW,CAACC,IAAZ,GAAmBlB,WAAnB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAOC,EAAE,CAACM,SAAH,CAAaV,eAAb,EAA8BQ,WAA9B,CAAP;AACH,GAPD,EAOGF,IAPH,CAOQ,MAAM;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACA,WAAOQ,YAAY,CAACC,IAAb,CAAkB,aAAlB,EAAiC;AAAEb,MAAAA,GAAG,EAAED;AAAP,KAAjC,CAAP;AACH,GAVD,EAUGQ,IAVH,CAUQ,MAAI;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACH,GAZD;AAcH,C","sourcesContent":["import * as fs from \"fs-extra\";\nimport * as path from \"path\";\nimport * as childProcess from \"child-process-es6-promise\";\n\nvar templates = {\n    babel: \"project-template\",\n    system: \"system-project-template\"\n};\n\nexport default (program) => {\n\n    program.version(\"0.0.1\")\n        .option(\"-t, --type [type]\", \"Type of project. Options are: 'babel' (default), 'system' (dispatcher system).\")\n        .parse(process.argv);\n\n    var args = program.args;\n    var projectName = args[1];\n    var type = program.type || \"babel\"\n    var templateName = templates[type] || templates.babel;\n\n    var templateDirectory = path.join(__dirname, \"../../templates/\", templateName);\n    var projectDirectory = path.join(process.cwd(), projectName);\n    var packageJsonFile = path.join(projectDirectory, \"package.json\");\n\n    if (projectName == null) {\n        throw new Error(\"Please provide a project name.\");\n    }\n\n    console.log(\"Creating template....\");\n\n    fs.copy(templateDirectory, projectDirectory).then(() => {\n        console.log(\"Modifying package.json...\");\n        return fs.readJson(packageJsonFile);\n    }).then((packageJson) => {\n        packageJson.name = projectName;\n        console.log(\"Saving package.json...\");\n        return fs.writeJson(packageJsonFile, packageJson);\n    }).then(() => {\n        console.log(\"Running npm for you, this may take a while...\");\n        return childProcess.exec(\"npm install\", { cwd: projectDirectory });\n    }).then(()=>{\n        console.log(\"Locked and loaded, you are ready to go. Happy coding.\");\n    });\n\n}\n"],"file":"create-project.js"}